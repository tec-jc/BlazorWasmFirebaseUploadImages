@page "/"
@using Firebase.Auth
@using Firebase.Auth.Providers
@using Firebase.Storage
@inject IConfiguration Configuration

<h3>Subir imagen a Firebase Storage</h3>

<InputFile OnChange="@LoadFiles" />

@if (selectedFile != null)
{
    <p>Archivo seleccionado: @selectedFile.Name</p>
    <button @onclick="UploadImage">Subir imagen</button>
}

@code {
    private IBrowserFile selectedFile;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task UploadImage()
    {
        if (selectedFile != null)
        {
            var apiKey = "AIzaSyCtVh4zr3zAHX_VIucV9q8FNzomEkxXeps";
            var bucket = "perfiles-ec17c.appspot.com";
            var authEmail = "proyectoblazor@gmail.com";
            var authPassword = "proyectoblazorpass";

            var config = new FirebaseAuthConfig{
                ApiKey = apiKey,
                AuthDomain = $"perfiles-ec17c.firebaseapp.com",
                Providers = new FirebaseAuthProvider[]{
                    new EmailProvider()
                }
            };
            var client = new FirebaseAuthClient(config);
            var auth = await client.SignInWithEmailAndPasswordAsync(authEmail, authPassword);

            var cancellation = new CancellationTokenSource();

            var task = new FirebaseStorage(
                bucket,
                new FirebaseStorageOptions
                {
                    AuthTokenAsyncFactory = async () => await auth.User.GetIdTokenAsync(),
                    ThrowOnCancel = true
                })
                .Child("images")
                .Child(selectedFile.Name)
                .PutAsync(selectedFile.OpenReadStream(maxAllowedSize: 10485760), cancellation.Token);

            try
            {
                string downloadUrl = await task;
                Console.WriteLine($"File uploaded successfully. Download URL: {downloadUrl}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error uploading file: {ex.Message}");
            }
        }

        selectedFile = null;
    }
}